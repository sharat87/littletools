name: Build

on:
  workflow_dispatch:

  push:
    branches:
      - master

  pull_request:
    branches:
      - master

jobs:
  all:
    timeout-minutes: 5
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Get versions
        id: versions
        run:
          sed 's/ /_version=/' .tool-versions | tee -a "$GITHUB_OUTPUT"

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ steps.versions.outputs.python_version }}

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ steps.versions.outputs.nodejs_version }}
          cache: yarn
          cache-dependency-path: frontend/yarn.lock

      - name: Install Task
        run: |
          wget 'https://github.com/go-task/task/releases/download/v3.22.0/task_linux_amd64.tar.gz'
          tar -xzf task_linux_amd64.tar.gz task

      - name: Test Frontend
        run: ./task test-frontend

      - name: Test Backend
        run: ./task test-backend

      - name: Build frontend
        run: ./task build-frontend

      - name: Build Docker Image and run integration tests
        run: |
          docker build -t lt .
          docker run --rm -d -p 3060:80 lt
          ./task test-integration

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: intests/playwright-report/
          retention-days: 9

      - name: Push Docker image to GHCR
        if: |
          success() && github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: |
          docker tag lt ghcr.io/${{ github.actor }}/littletools:latest
          docker login ghcr.io --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }}
          docker push ghcr.io/${{ github.actor }}/littletools
